apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  annotations:
    argocd-autopilot.argoproj-labs.io/default-dest-server: https://kubernetes.default.svc
    argocd.argoproj.io/sync-options: PruneLast=true
    argocd.argoproj.io/sync-wave: '{{ syncWave }}'
  creationTimestamp: null
  name: trade
  namespace: argocd
spec:
  clusterResourceWhitelist:
  - group: "*"
    kind: "*"
  description: trade project
  destinations:
  - namespace: "*"
    server: "*"
  namespaceResourceWhitelist:
  - group: "*"
    kind: "*"
  sourceRepos:
  - "*"
status: {}

---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '{{ syncWave }}'
  creationTimestamp: null
  name: trade
  namespace: argocd
spec:
  generators:
    - git:
        files:
        - path: apps/**/trade/config.json
        repoURL: https://github.com/jacekzubielik/k8s-argocd-autopilot-playground.git
        requeueAfterSeconds: 20
        revision: ""
        template:
          metadata: {}
          spec:
            destination: {}
            project: ""
            source:
              repoURL: ""
    - git:
        files:
        - path: apps/**/trade/config_dir.json
        repoURL: https://github.com/jacekzubielik/k8s-argocd-autopilot-playground.git
        requeueAfterSeconds: 20
        revision: ""
        template:
          metadata: {}
          spec:
            destination: {}
            project: ""
            source:
              directory:
                exclude: '{{ exclude }}'
                include: '{{ include }}'
                jsonnet: {}
                recurse: true
              repoURL: ""
  syncPolicy: {}
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: '{{ syncWave }}'
      labels:
        app.kubernetes.io/managed-by: argocd-autopilot
        app.kubernetes.io/name: '{{ appName }}'
        application-role: '{{ appRole }}'
      name: trade-{{ userGivenName }}
      namespace: argocd
    spec:
      destination:
        namespace: '{{ destNamespace }}'
        server: '{{ destServer }}'
      ignoreDifferences:
        - group: argoproj.io
          kind: Application
          jsonPointers:
            - /status
        - group: argoproj.io
          kind: Application
          jsonPointers:
            - /operation
      project: trade
      source:
        path: '{{ srcPath }}'
        repoURL: '{{ srcRepoURL }}'
        targetRevision: '{{ srcTargetRevision }}'
      syncPolicy:
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 8m0s
          limit: 2
        syncOptions:
          - CreateNamespace=true
          - PrunePropagationPolicy=foreground
          - preserveResourcesOnDeletion=false
          - SkipDryRunOnMissingResource=true
          - Replace=false
          - ServerSideApply=true
          - ApplyOutOfSyncOnly=true
          - Validate=false
          - PruneLast=true
          - Delete=false
          - RespectIgnoreDifferences=true
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
status: {}
